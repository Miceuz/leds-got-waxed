* 3 differential Audio inputs each for one channel
* 16 LED outputs
* 5, 5, 6 LEDS assigned to channels

Audio level trigger is automatically set to 2/3 of full range.

One of 5 effects can be assigned to each channel by means of a rotary switch, one potentiometer is available for each channel that is used to controll one aspect of the selected effect

available effects:
* VU meter - leds blink as in audio VU meter, potentiometer controlls overall brightness
* Triggered VU meter - on trigger channels light up and turn down in a row, just like VU meter. Potentiometer controlls the speed of the effect.
* Chase - channels light up one by one in a row when triggered. Potentiometer controlls the speed of the animation.
* Blink - all channels fade in and fade out simultaneously on trigger. Potentiometer controlls speed of the fade.
* Random - all channels blink randomly for duration set by potentiometer.


THAT1247 was chosen as an audio front end. It's a go to nobrainer part when you want to do a differential line level signal translation. I did not want a journey while rolling my own, so I've chosen this part. I've used a 6dB part and configured it as an amplifier to increase signal level from proffessional line level (3.472V peak to peak) up to 7.2V peak to peak.

Op amp creates a virtual ground midpoint. Single ended signal is AC coupled and limited by diode D1 to apply only positive peaks to ADC input. Capacitor C3 and resistor R4 form an antialiasing low pass filter. I'm going to run ADC at 250kHz, this will allow me to sample three channels at roughly 6kHz, this means our Nyquist frequency is 3kHz.

The segments had to be put on the floor at 45 degree level. I have had a go with OpenSCAD to model feet to accomodate that.

Since we have plenty of those, I have used a chinese ebay "LED amplifier". Inside it looks like a dumbed down RGB dimmer version with a chinese microcontroller and a mosfet. It acts like a transistor - when you power a pin, it switches the other two. As you need to provide at least 12V to switch, they are robust enough - no crosstalk problems whatsoever.

Wiring is a mess as I couldn't think a of good way to provide power and data to strips with quick-disconnect connectors, so I have made it the dumb way.

In the middle of the project I have decided to ditch the switch and potentiometer idea - musicians have enough stuff to do on stage anyway and lightning is a job of the lightning engineer. All the parameters of the channels will be controlled via DMX from lightning console.

I have used the 74HC165 serial shift in register to read the dip switch for the DMX address and test modes. This didn't work in the beginning as it appeared SPI comm was breaking TLC comm somehow, no time to debug that as we are going live in a couple of days and those couple of days are christmass eve and co. So I have fallen back to bitbanging to read dip switch. It seems SPI bus can not be used while TLC chip library is actively pushing data.

Then I have assembled everything into a box. I've tried my best, but not every part is pretty, especially the square holes. 

For control I have leveraged a wonderful program QLC+ - we worked together with the band and the light engineer to expose over DMX as much means for controlling effects as possible:
 - Effect -- the effect style
 - Trigger level -- the level of audio which triggers the effect
 - Trigger hold off -- time to now trigger after triggering
 - Decay speed -- how fast the effect fades
 - Master -- max brightness level
 - Gain -- audio input level multiplier


 All in all there's a big question if all of this could not be implemented in QLC+ or the professional lightning console alone, but I wanted a journey, I had a journey.
